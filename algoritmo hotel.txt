usuarios = []
quartosUsuarios = []
iniciar menu
enquanto verdadeiro
pede para o usuario escolher uma opcao
grave escolhar menu como entrada numerica
caso escolha menu		
seja 1 - > admin.LoginAdmin
seja 2 ->  hotel.AgendarDiaria
seja 3 ->  mostre saindo pare
seja 4 -> hotel.mostrarHospedes
seja 5 -> hotel.pesquisarHospedes
senao -> mostrar Erro

lerEntradaNumerica
enquanto verdadeiro
tente retornar leitura como inteiro
em exececoes mostre entrada invalida! digite um numero


class Admin{
nome String
senhaValidada = false


Login Admin
pede o nome do usuario
grava o nome 
validarSenha
logado com sucesso

validarSenha
enquanto verdadeiro
pede a senha do usario
grava a senha como entrada numerica
se a senha for = 2678
senhaValidada = true
pare
senao
mostre senha invalida


}

class hotel{
diasDeEventos = [[7,3,17:00]]
AuditoriosReservados = [[laranja, 40 cadeiras]]
cadeirasDoAuditorioLaraanja = 150
cadeirasLivres = 70
cadeirasDoAuditorioVermelho = 350
locaisHospedados = []
usuarios = lista mutavel de Strings[]
quartos = 1..20
gratuitades = 0
meias = 
completos = 0
somaPrecos = 0
nome = layor
quandoInstanciada
	se admin.senhaValidada for igual true
	mostre bem vindo ao hotel nome admin.nome! é um imenso prazer ter você por aqui!
	se nao 
		admin nao logado faça login
		admin.loginUser()

AgendarDiaria
var nome : String
pergunta pelo valor padrao da diaria
grava preco como lerEntradanumerica
enquanto verdadeiro
pergunte a quantidade de dias
grava qtdeDias como inteiro
se qtdeDias <= 0 ou >=30
	mostre numero de dias invalido
senao
	pare
enquanto nome for diferente de pare
pergunte o nome do user
grava o nome 
se nome for igual pare
	pare
pergunte a idade 
grave a idade como entrada numerica
adicione user a usuarios 
se idade for menor que 7 
	mostre tem gratuidade
	gratuitade ++
se idade for maior que 59
	mostre paga meia
	soma precos += preço/2
	meias ++
senao
	somaPrecos += preco
	completos ++

	
mostre para ele escolher um e disponivel
percorre e de quartos
grava quarto como inteiro
se quartos nao contem quarto
	mostre quarto indisponivel utilize outro
se nao 
	
mostre confirmma reserva no quarto pelo valor somaPrecos com gratuitades meias e completos?
se sim 
	remova de quartos o quarto no indice de e
	adicione quarto a quartosHospedes
	mostre quarto confirmado com sucesso para os hospedes ... 
	adiciona a lista de hospedes a lista de usuarios
se nao 
	iniciarMenu

mostrar todos os hospedes
se tamanho de hospedes é 0 
	mostre nao ha hospedes
se nao 
	mostre hospede | quarto
	percorre i,e de usuarios
		mostre e.juncaoporString | quartos[i]
	
pesquisarHospede
usuario encontrado = false
pede pelo nome do hospede
percorre i,e de usuarios
	se e contem nome
		mostre o nome esta em quarto[i]
		usuario encontrado = true

se usuario encontrado == false
	mostre usuario nao encontrado

}

class eventos{
data = listaMutavel[]
auditorio = listaMutavel[]
numeroConvidados

cadastrarEvento
execute infinito
pergunte ao usuario o numero de convidados 
grava o numero como entrada numerica
	se o numero for menor que 10 ou maior que 350
		 mostre numero invalido
	senao
		pare execucao
se numero for maior que 1 e menor que 220
	numCadeiras = if(numero - auditorioLaranja > 0) return numero - auditorioLaranja else 0
	mostre auditorio laranja mais adequado inclua mais numCadeiras  de cadeiras
	hotel.auditorio.add(["laranja","numCadeiras cadeiras"])
mas se numero for maior que 220
	mostre auditorio colorado mais adequado
	auditorio.add(["colorado"])
mostre qual mes do evento
grava mes
** validar mes
mostre qual dia do evento
grava dia como lerEntradaNumerica
** validar dia

dataValidada = false
enquanto dataValidada == false
	mostre qual horario do inicio do evento
	grava horario como int
	se horario for <8 ou maior que 23
		mostre horario invalido
	senao dataValidada == true
	
data.add(listOf(mes,dia,2025))
percorre e de hotel.diasDeEventos
	se e.é igual = data
		mostre data já está ocupada escolha outro horario
		dataValidada = false
	senao 
		hotel.diasDeEventos.add[data]
		hotel.AuditoriosReservados.add[auditorio]


}


